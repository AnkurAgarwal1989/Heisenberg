from lxml import html
import requests
import string
page = requests.get('http://www.ptable.com/')
tree = html.fromstring(page.text)
ptelements_a = tree.xpath('//td[re:match(@class, "Element")]//acronym/text()', namespaces={"re": "http://exslt.org/regular-expressions"});
ptelements = tree.xpath('//td[re:match(@class, "Element")]//em/text()', namespaces={"re": "http://exslt.org/regular-expressions"});
print ptelements_a;
print ptelements;
pt = zip( ptelements_a, ptelements);
for acr,ele in pt:
    print acr + "__" + ele

testText = "Go Away";
testText = testText.replace(" ", "");
testText = [letter for letter in testText];
print testText;
length = -1;
for accr in ptelements_a:
    if len(accr) > length:
        length = len(accr);

print length;


pt.sort();
print pt;
bins = [];
for i in range(0, 26):
    bins.append([]);
for i in range(len(pt)):
    t = ord(pt[i][0][0]) - ord('A');
    bins[t].append(pt[i]);
       
print bins
for bin in bins:
    print chr(bins.index(bin) + ord('A'))
    print bin;
    print str(len(bin));
    print '\n'

outputText = [];

print testText;

def findInBins(letters):
    alphaIdx = ord(letters[0].upper()) - ord('A');
    if len(bins[alphaIdx]) == 0:
        return None;
        
    for element in bins[alphaIdx]:
        if letters in element[0]:
            return bins[alphaIdx][bins[alphaIdx].index(element)][1];
    
    return bins[alphaIdx][0][1];
    
        
for i in range(len(testText)):
    outBuff = "";
    outBuff = findInBins(testText[i]);
    if findInBins(testText[i]) is not None:
        if findInBins(testText[i]+testText[i+1] is not None):
    outputText.append(" " + findInBins(letter));

print outputText;
